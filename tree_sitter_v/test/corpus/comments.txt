================================================================================
Empty comment
================================================================================
//
/**/
/***/
module foo
--------------------------------------------------------------------------------

(source_file
  (line_comment)
  (block_comment)
  (block_comment)
  (module_clause
    (identifier)))

================================================================================
Line comment
================================================================================
// Line comment
// Line comment
module foo
--------------------------------------------------------------------------------

(source_file
  (line_comment)
  (line_comment)
  (module_clause
    (identifier)))

================================================================================
Multiline comment
================================================================================
/*
  Multiline comment
  Multiline comment
*/
/*foo**/
module foo
/**foo*/
/**foo**/
--------------------------------------------------------------------------------

(source_file
  (block_comment)
  (block_comment)
  (module_clause
    (identifier))
  (block_comment)
  (block_comment))

================================================================================
Multiline nested comment
================================================================================
/**********************************************************************
* Comment
* /*** Nested ***/
**********************************************************************/
module main
/* Recuresively nested
  > Level 1
  /*
    >> Level 2
    /*

      >>> Level 3
      /* Nested */
      <<<
    */
    <<
  */
  <
*/
foo := 'abc'
/* asdf */
--------------------------------------------------------------------------------

(source_file
  (block_comment)
  (line_comment)
  (module_clause
    (identifier))
  (block_comment)
  (simple_statement
    (var_declaration
      (expression_list
        (reference_expression
          (identifier)))
      (expression_list
        (literal
          (interpreted_string_literal))))))
